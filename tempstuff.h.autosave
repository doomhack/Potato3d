#ifndef VOXELTERRAIN_H
#define VOXELTERRAIN_H

#include <QtCore>
#include <QImage>

#include "common.h"

#include "object3d.h"





class VoxelTerrain : public QObject
{
    Q_OBJECT
public:
    explicit VoxelTerrain(QObject *parent = nullptr);

    void Render();
    void Draw3d();

    void BeginFrame();

    void DrawObject(const Object3d* object);
    void DrawMesh(const Mesh3d* mesh);


    QRgb* frameBuffer;

    QImage frameBufferImage;

    QImage heightMapImage;
    QImage colorMapImage;

    QImage waterImage;
    const QRgb* water;

    const QRgb* colorMap;
    const quint8* heightMap;

    static const int screenWidth = 720;
    static const int screenHeight = 360;

    const int mapSize = 2048;

    const fp zNear = 5;
    const fp zFar = 1024;
    const fp zStep = 1;
    const fp zStepD = 0.01f;

    fp* zBuffer;
    int yBuffer[screenWidth];



    const fp heightScale = (float)(0.82*((float)screenWidth * ((float)screenHeight/(float)screenWidth)));
    const fp yScale = (float)((float)screenWidth * ((float)screenHeight/(float)screenWidth));



    fp zAngle = 0;

    P3D::V3<fp> cameraPos;
    fp cameraAngle;
    int cameraHeight;

    QList<Object3d*> objects;



private:




};

#endif // VOXELTERRAIN_H
